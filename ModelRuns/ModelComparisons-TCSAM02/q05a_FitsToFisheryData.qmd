---
title: "Fits to Fishery Catch Data"
author: William T. Stockhausen
affiliation: NOAA/NMFS/AFSC
date: '`r format(Sys.time(), "%b %e, %Y")`'
fontsize: 11pt 
number-sections: true
reference-location: document
bibliography: '`r path.expand("~/Work/Projects/Bibliography/AllRefs.bib")`'
csl: '`r system.file("files/CJFAS.csl",package="wtsQMD")`'
crossref:
  chapters: false      # prepend label reference numbers by chater number?
  fig-title: Figure    # for caption: default is "Figure")
  tbl-title: Table     # for caption: default is "Table")
  title-delim: "."     # for caption: default is ":")
  fig-prefix: Figure   # for in-text (use [-@fig-ref] to drop prefix in text)
  tbl-prefix: Table    # for in-text (use [-@tbl-ref] to drop prefix in text)
  fig-labels: arabic    # options are arabic, roman, roman i, alpha x, alpha X; latter two starting from x/X
  tbl-labels: arabic    # options are arabic, roman, roman i, alpha x, alpha X; latter two starting from x/X
  subref-labels: alpha a # options are arabic, roman, roman i, alpha x, alpha X; latter two starting from x/X
  ref-hyperlink: true    # references are hyperlinked if true
format: 
  html: 
    df-print: paged
    toc: true
    toc-location: right
    fig-width: 6.5
    fig-asp: 0.6
    fig-dpi: 100
  pdf:
    documentclass: scrartcl
    toc: false
    fig_crop: false
    keep-tex: false
    fig-width: 6.5
    fig-asp: 0.6
    fig-dpi: 100
    geometry:
      - left=1.0in
      - right=1.0in
      - top=1.0in
      - bottom=1.0in
      - textwidth=6.5in
      - showframe=false
    include-in-header: 
      - text: |
          \usepackage{placeins}
          \extrafloats{500}
          \maxdeadcycles=10000
      - file: "/Users/williamstockhausen/Work/Programming/R/Library/wtsQMD/files/ltx_ExtraLatexIncludes.tex"
echo: false
warning: false
results: 'hide'
keep-md: false
keep-yaml: false
editor: source
editor_options: 
  chunk_output_type: console
concordance: true
params:
  setup: !expr 'system.file("files/qmd_setup.R",package="wtsQMD")'
  rdaAsmtSetup: "rda_AssessmentSetupBridgingAnaysis1.RData"   #--"rda_AssessmentSetup.RData"
  testing: false
---

<!-- if not child doc, set up required objects -->
```{r}
#| label: TCSAM02Mods-FshABs_setup
#| eval: !expr '!knitr::opts_knit$get("child")'
#| results: "asis"
  if (!exists("testing")) testing = params$testing;
  if (testing) cat(params$setup,"\n\n")
  source(params$setup);
  if (testing) {
    cat("In ExecSmry_setup:\n\n")
    cat("root = ",root,"\n\n");
    cat("peek = '",child_path$peek(),"'\n\n",sep="");
  }
```

```{r}
#| label: setup_TCSAM02Mods-FshABs
#| results: 'asis'
  require(ggplot2);
  require(kableExtra);
  require(rCompTCMs);
  require(tables);
  require(wtsQMD);
  Sum = wtsUtilities::Sum;
  old_thm = ggplot2::theme_set(cowplot::theme_cowplot(font_size = 10) +
                               cowplot::background_grid() +
                               cowplot::panel_border());
  thm = wtsPlots::getStdTheme();
  options("readr.show_col_types"=FALSE);
  if (testing) cat("dirThs =",child_path$peek(),"\n\n")
  if (!exists("s")){
    fn = ifelse(child_path$peek()!="",
                file.path(child_path$peek(),"../..",params$rdaAsmtSetup),
                file.path(rstudioapi::getActiveProject(),
                          params$rdaAsmtSetup));
    s = wtsUtilities::getObj(fn);
  }
  if (!exists("models"))
    models = wtsUtilities::getObj(s$ModCompPths$fnModels);


  if (!exists("strAY"))  strAY  = wtsQMD::crabYear(s$asmtYr);
  if (!exists("currYr")) currYr = wtsQMD::crabYear(s$asmtYr-1);#--current fishery year

  prvYr = s$asmtYr-1;
  if (!exists("tblno")) tblno = 0;#--index in LETTERS for tables in text
```

```{r}
  prfMod = s$prfMod;#--preferred model(s?)
  prvMod = s$prvMod;#--previous assessment model
  compare  = names(models);
  cases1   = compare;
  cases2   = NULL;
  obs_case = prfMod;
  if (!exists("PLOT_OBJECTS")){
    #--PLOT OBJECTS---------------------------------------
    source(file.path(s$dirs$RCode,"r_FigureFunctions.R"));
    std_theme = wtsPlots::getStdTheme();
    ggT = ggplot2::theme(plot.title=element_text(size=10,margin=margin()),
                         panel.spacing = grid::unit(0.01,"in"),
                         legend.position="none", 
                         plot.margin=margin(0,0,0,1));
    ggL = labs(title=NULL,subtitle=NULL);
    colour_scale=ggplot2::scale_color_hue();
    fill_scale  =ggplot2::scale_fill_hue();
    PLOT_OBJECTS = "PLOT_OBJECTS";#--make flag to prevent doing this again
  }

  #--function to make plots
  makeFits<-function(fleet,catch_type,sex,
                     models,cases1,cases2,ggL,ggT,std_theme){
    #--fits
    #----cases1
    mdfr1<-rCompTCMs::extractMDFR.Fits.BiomassData(objs=models[cases1],
                                                  fleets=fleet,
                                                  fleet.type="fishery",
                                                  catch.type=catch_type,
                                                  fishery.pdfType="lognormal",
                                                  ci=0.95) |>
          # dplyr::filter(!((case=="20.07")&(type=="observed"))) |>
          dplyr::mutate(case=factor(as.character(case),levels=c(cases1,cases2)));
    tmp = mdfr1 |> dplyr::filter(x==sex);
    if (nrow(tmp)==0) return(NULL);
    ps1 = rCompTCMs::compareFits.BiomassData(tmp,
                                             fleet.type="fishery",
                                             catch.type=catch_type,
                                             fishery.pdfType = "lognormal",
                                             position=ggplot2::position_dodge(0),
                                             plot1stObs=TRUE,numRecent=20)[2];
    #lg = cowplot::get_legend(ps1[[1]]+guides(shape="none")+theme(legend.box.margin=margin(0,0,0,2)));
    p1 = ps1[[1]]+ggL+ggT+std_theme+theme(axis.title.x = element_blank());
    #------residuals
    mdfr3 = extractFits.AllScores.ACD(objs=models[c(cases1,cases2)],
                                   fleets=fleet,
                                   fleet.type="fishery",
                                   catch.type=catch_type,
                                   data.type="biomass");
    tmp = mdfr3 |> dplyr::filter(x==sex);
    if (nrow(tmp)==0) return(p1);
    p3 = makeAll.FitACD.MARE(tmp,ggL,ggT,std_theme);
    # pg = cowplot::plot_grid(p1,p2,p3,nrow=3,rel_heights=c(1,1,2));
    pg = cowplot::plot_grid(p1,p3,nrow=2,rel_heights=c(1,1));
    return(pg);
  }
```

## Fits to Fishery Catch Data {#sec-TCSAM02Mods-Fits2FshBio}

Fits to the observed and model-predicted fishery catch biomass data are presented in Figures [-@fig-TCSAM02Mods-FshBioFitsRC]-[-@fig-TCSAM02Mods-FshBioFitsTC-GF-All]. Residuals to the fits and summary statistics are also shown on each figure. Graphs of fits to observed catches from the directed fishery are presented in Figures [-@fig-TCSAM02Mods-FshBioFitsRC]-[-@fig-TCSAM02Mods-FshBioFitsTC-TCF-All] for retained catch and total catch. Fits to bycatch data from the snow crab fishery are shown in Figure [-@fig-TCSAM02Mods-FshBioFitsTC-SCF-All]. Fits to bycatch data from the BBRKC fishery are shown in Figure [-@fig-TCSAM02Mods-FshBioFitsTC-RKF-All]. Fits to bycatch data from the groundfish fisheries are shown in Figure [-@fig-TCSAM02Mods-FshBioFitsTC-GF-All]. All of the models exhibit similar fits to the catch data.

```{r}
#| label: fig-TCSAM02Mods-FshBioFits
#| fig-width: 9
#| fig-asp: 0.667
  #--retained catch in the directed fishery----
  pg = makeFits(fleet="TCF",catch_type="retained",sex="male",
                 models=models,cases1=cases1,cases2=cases2,
                 ggL=ggL,ggT=ggT,std_theme=std_theme); if (testing&!is.null(pg)) print(pg);
  cap = paste0("TCSAM02 models fits to retained catch biomass in the directed fishery (upper two rows) and ",
               "residuals analysis plots (lower two rows). ",
               "Confidence intervals are 95%.");
  xt  = "RC";
  lbl = wtsQMD::getLabel(xt);
  pth = wtsQMD::getFigFN(xt);
  lstFigs = c(lstFigs,wtsQMD::printGGplot(pg,lbl=lbl,cap=cap,pth=pth,ori="L"));
  # lstFigs[[lbl]] = list(lbl=lbl,cap=cap,pth=pth,wid=9,hgt=6,dpi=def_dpi,ori="L");
  # ggsave(pth,plot=pg,width=9,height=6,units="in",dpi=def_dpi);
  rm(pg,xt,lbl,cap,pth);

  #--total catch in all fisheries----
  for (fleet_ in c("TCF","SCF","RKF")){
    #--testing: fleet_="TCF";
    #----males
    pg = makeFits(fleet=fleet_,catch_type="total",sex="male",
                   models=models,cases1=cases1,cases2=cases2,
                   ggL=ggL,ggT=ggT,std_theme=std_theme); 
    if (!is.null(pg)) {
      if (testing) print(pg);
      lbl = paste0("Fits.TotCatchBiomass.Males.",fleet_,".PrefMod");
      cap = paste0("TCSAM02 models fits to total catch biomass for male crab in the ",fleet_," fishery (upper row) and ",
                   "residuals analysis plots (lower two rows). ",
                   "Confidence intervals are 95%.");
      xt  = paste0("TC-",fleet_,"-M");
      lbl = wtsQMD::getLabel(xt);
      pth = wtsQMD::getFigFN(xt);
      lstFigs = c(lstFigs,wtsQMD::printGGplot(pg,lbl=lbl,cap=cap,pth=pth,ori="L"));
      # lstFigs[[lbl]] = list(lbl=lbl,cap=cap,pth=pth,wid=9,hgt=6,dpi=def_dpi,ori="L");
      # ggsave(pth,plot=pg,width=9,height=6,units="in",dpi=def_dpi);
      rm(pg,xt,lbl,cap,pth);
    }
    #----females
    if (!is.null(pg)) {
      pg = makeFits(fleet=fleet_,catch_type="total",sex="female",
                     models=models,cases1=cases1,cases2=cases2,
                     ggL=ggL,ggT=ggT,std_theme=std_theme); 
      if (testing) print(pg);
      lbl = paste0("Fits.TotCatchBiomass.Females.",fleet_,".PrefMod");
      cap = paste0("TCSAM02 models fits to total catch biomass of female crab in the ",fleet_," fishery (upper row) and ",
                   "residuals analysis plots (lower two rows). ",
                   "Confidence intervals are 95%.");
      xt  = paste0("TC-",fleet_,"-F");
      lbl = wtsQMD::getLabel(xt);
      pth = wtsQMD::getFigFN(xt);
      lstFigs = c(lstFigs,wtsQMD::printGGplot(pg,lbl=lbl,cap=cap,pth=pth,ori="L"));
      # lstFigs[[lbl]] = list(lbl=lbl,cap=cap,pth=pth,wid=9,hgt=6,dpi=def_dpi,ori="L");
      # ggsave(pth,plot=pg,width=9,height=6,units="in",dpi=def_dpi);
      rm(pg,xt,lbl,cap,pth);
    }
    #----combined sexes
    pg = makeFits(fleet=fleet_,catch_type="total",sex="all sex",
                   models=models,cases1=cases1,cases2=cases2,
                   ggL=ggL,ggT=ggT,std_theme=std_theme); 
    if (!is.null(pg)) {
      if (testing) print(pg);
      cap = paste0("TCSAM02 models fits to total catch biomass of all crab in the ",fleet_," fishery (upper row) and ",
                   "residuals analysis plots (lower two rows). ",
                   "Confidence intervals are 95%.");
      xt  = paste0("TC-",fleet_,"-All");
      lbl = wtsQMD::getLabel(xt);
      pth = wtsQMD::getFigFN(xt);
      lstFigs = c(lstFigs,wtsQMD::printGGplot(pg,lbl=lbl,cap=cap,pth=pth,ori="L"));
      # lstFigs[[lbl]] = list(lbl=lbl,cap=cap,pth=pth,wid=9,hgt=6,dpi=def_dpi,ori="L");
      # ggsave(pth,plot=pg,width=9,height=6,units="in",dpi=def_dpi);
      rm(pg,xt,lbl,cap,pth);
    }
  }#--fleet_
  for (fleet_ in c("GF All")){
    #--testing: fleet_="GF All"
    pg = makeFits(fleet=fleet_,catch_type="total",sex="all sex",
                   models=models,cases1=cases1,cases2=cases2,
                   ggL=ggL,ggT=ggT,std_theme=std_theme); if (testing) print(pg);
    cap = paste0("TCSAM02 models fits to total catch biomass of all crab in the ",fleet_," fishery (upper row) and ",
                 "residuals analysis plots (lower two rows). ",
                 "Confidence intervals are 95%.");
    xt  = paste0("TC-",fleet_);
    lbl = wtsQMD::getLabel(xt);
    pth = wtsQMD::getFigFN(xt);
    lstFigs = c(lstFigs,wtsQMD::printGGplot(pg,lbl=lbl,cap=cap,pth=pth,ori="L"));
    # lstFigs[[lbl]] = list(lbl=lbl,cap=cap,pth=pth,wid=9,hgt=6,dpi=def_dpi,ori="L");
    # ggsave(pth,plot=pg,width=9,height=6,units="in",dpi=def_dpi);
    rm(pg,xt,lbl,cap,pth);
  }#--fleet_
```

<!-- references -->
```{r,eval=!knitr::opts_knit$get("child")&!isPDF,results='asis'}
  cat("# References {-}\n");
  cat("::: {#refs}\n");
  cat(":::\n\n");
```

<!-- tables, if not child doc and lstTbls is not empty -->
```{r}
#| label: tables_TCSAM02Mods-FshABs
#| eval: !expr '!knitr::opts_knit$get("child")'
#| results: asis
  source(system.file("files/printTablesSectionFromList.R",package="wtsQMD"));
```

<!-- figures, if not child doc and lstFigs is not empty -->
```{r}
#| label: figures_TCSAM02Mods-FshABs
#| eval: !expr '!knitr::opts_knit$get("child")'
#| results: asis
  source(system.file("files/printFiguresSectionFromList.R",package="wtsQMD"));
```

